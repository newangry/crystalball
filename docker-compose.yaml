version: "3.7"

networks:
  proxy:

volumes:
  postgres_data:
  wpdb_data:

services:

#-----PROXY-----#

  nginx:
    container_name: petropolis-nginx
    image: nginx:alpine
    volumes:
      - ./app/config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./app/config/nginx/its.timetochange.today.conf:/etc/nginx/sites-enabled/its.timetochange.today.conf
      - ./app/config/nginx/timetochange.today.conf:/etc/nginx/sites-enabled/timetochange.today.conf  
      - ./app/config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./app/config/ssl/certbot/conf:/etc/letsencrypt
      - ./app/config/ssl/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    restart: always
    command: /bin/sh -c "while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"    
    networks:
      proxy:
  
  certbot:
    container_name: petropolis-certbot
    image: certbot/certbot
    volumes:
      - ./app/config/ssl/certbot/conf:/etc/letsencrypt
      - ./app/config/ssl/certbot/www:/var/www/certbot
    restart: unless-stopped
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"
    depends_on:
      - nginx
    networks:
      proxy: 

#-----MAP-----#

  client:
    build:
      dockerfile: Dockerfile
      context: ./app/client
    image: petropolis-client
    volumes:
      - /app/node_modules
      - ./app/client:/app
    container_name: petropolis-client
    ports:
      - "3000:80"
    networks:
      proxy:

  geoserver:
    image: oscarfonts/geoserver:2.17.0
    volumes:
      - ./app/geoserver/geoserver_data:/var/local/geoserver
      - ./app/geoserver/geoserver_exts:/var/local/geoserver-exts/
      - ./app/geoserver/web.xml:/usr/local/geoserver/WEB-INF/web.xml
    env_file:
      - ./app/config/docker-env/geoserver.env
    container_name: petropolis-geoserver
    restart: on-failure
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      proxy:

  db:
    image: kartoza/postgis:12.1
    container_name: petropolis-database
    restart: on-failure
    volumes:
      # we are mounting a named volume here instead of a data directory path because of
      # a windows 10 premission issue. See https://github.com/docker-library/postgres/issues/435)
      # .........
      - postgres_data:/var/lib/postgresql
      - ./app/database:/opt
      - ./app/config:/opt/config
    env_file:
      - ./app/config/docker-env/db.env
    ports:
      - "65432:5432"
    networks:
      proxy:


#-----WORDPRESS-----#

  wp:
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    container_name: petropolis-wp
    ports:
      - 5000:80 # change ip if required
    volumes:
      - ./app/config/wp/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./app/wp/wp-app:/var/www/html # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    env_file:
      - ./app/config/docker-env/wp.env
    depends_on:
      - wpdb
    networks:
      proxy:

  wpcli:
    image: wordpress:cli
    container_name: petropolis-wpcli
    volumes:
      - ./app/config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./app/wp/wp-app:/var/www/html
    depends_on:
      - wpdb
      - wp
    networks:
      proxy:
  
  wppma:
    image: phpmyadmin/phpmyadmin
    container_name: petropolis-wppma
    env_file:
      - ./app/config/docker-env/wp.env
    ports:
      - 8000:80
    networks:
      proxy:

  wpdb:
    image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    container_name: petropolis-wpdb
    env_file:
      - ./app/config/docker-env/wp.env
    ports:
      - 3307:3306 # change ip if required
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./app/wp/wp-data:/docker-entrypoint-initdb.d
      - wpdb_data:/var/lib/mysql
    networks:
      proxy: